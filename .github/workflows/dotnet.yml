# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    # Add input for minor bump
    inputs:
      bump-minor:
        description: 'Bump minor version instead of patch'
        required: false
        default: 'false'
        type: boolean

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Bump version
      id: bump_version
      run: |
        PROJECT_FILE=$(find src -name '*.csproj' | head -n 1)
        VERSION_LINE=$(grep '<Version>' "$PROJECT_FILE" || echo '')
        if [ -z "$VERSION_LINE" ]; then
          VERSION_LINE=$(grep '<Version>' "$PROJECT_FILE" || echo '')
        fi
        if [ -z "$VERSION_LINE" ]; then
          VERSION=$(grep -oP '<Version>\K[^<]+' "$PROJECT_FILE" || echo '0.1.0')
        else
          VERSION=$(echo "$VERSION_LINE" | grep -oP '<Version>\K[^<]+')
        fi
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        if [ "${{ github.event.inputs.bump-minor }}" = 'true' ]; then
          MINOR=$((MINOR+1))
          PATCH=0
        else
          PATCH=$((PATCH+1))
        fi
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        sed -i "s|<Version>.*</Version>|<Version>$NEW_VERSION</Version>|" "$PROJECT_FILE"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
    - name: Commit version bump and tag
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add src/*.csproj
        git commit --amend --no-edit || echo "No changes to commit"
        git tag -f v${{ steps.bump_version.outputs.new_version }}
        git push origin HEAD:master --force-with-lease --tags
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Pack NuGet
      run: dotnet pack --no-build --configuration Release --output nupkg
    - name: Upload NuGet artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: nupkg/*.nupkg
    - name: Publish NuGet package
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        dotnet nuget push nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
